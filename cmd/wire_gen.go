// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//+build !wireinject

package main

import (
	"github.com/go-kratos/kratos/v2"
	"github.com/go-kratos/kratos/v2/log"
	"helloworld/internal/conf"
	"helloworld/internal/dao"
	"helloworld/internal/server"
	"helloworld/internal/service"
)

// Injectors from wire.go:

// initApp init kratos application.
func initApp(confServer *conf.Server, confData *conf.Data, logger log.Logger) (*kratos.App, error) {
	client, err := dao.NewRedis(confData)
	if err != nil {
		return nil, err
	}
	db, err := dao.NewDb(confData)
	if err != nil {
		return nil, err
	}
	dataData := dao.New(client, db, logger)
	if err != nil {
		return nil, err
	}
	//greeterRepo := data.NewGreeterRepo(dataData, logger)
	//greeterUsecase := biz.NewGreeterUsecase(greeterRepo, logger)
	greeterService := service.NewPianoService(dataData)
	httpServer := server.NewHTTPServer(confServer, greeterService, logger)
	grpcServer := server.NewGRPCServer(confServer, greeterService, logger)
	app := newApp(logger, httpServer, grpcServer)
	return app, nil
}
